<?php
/**
 * Uthando CMS (http://www.shaunfreeman.co.uk/)
 *
 * @package   UthandoUnitTest\Core\Validator
 * @author    Shaun Freeman <shaun@shaunfreeman.co.uk>
 * @copyright Copyright (c) 2018 Shaun Freeman. (http://www.shaunfreeman.co.uk)
 * @license   see LICENSE
 */

declare(strict_types=1);

namespace UthandoUnitTest\Core\Validator;


use Uthando\Core\Validator\NoObjectExists;
use Uthando\User\Entity\UserEntity;
use UthandoTest\Framework\TestCase;
use Zend\Validator\ValidatorPluginManager;

class NoObjectExistsTest extends TestCase
{
    protected $validatorManager;

    public function setUp()/* The :void return type declaration that should be here would cause a BC issue */
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $serviceManager = $this->moduleLoader->getServiceManager();
        $this->validatorManager = $serviceManager->get(ValidatorPluginManager::class);
    }

    public function testWillFailIfRecordIsFound()
    {
        $validator      = $this->validatorManager->get(NoObjectExists::class, [
            'target_class' => UserEntity::class,
            'fields'       => 'email',
        ]);

        $this->assertFalse($validator->isValid('admin@example.com'));
    }

    public function testWillPassIfRecordIsIgnored()
    {
        $validator      = $this->validatorManager->get(NoObjectExists::class, [
            'target_class' => UserEntity::class,
            'fields'       => 'email',
            'exclude_field' => 'email',
            'context_field' => 'old_email',
        ]);

        $this->assertTrue($validator->isValid('admin@example.com', ['old_email' => 'admin@example.com']));
    }

    public function testWillPassIfRecordIsNotFound()
    {
        $validator      = $this->validatorManager->get(NoObjectExists::class, [
            'target_class' => UserEntity::class,
            'fields'       => 'email',
        ]);

        $this->assertTrue($validator->isValid('admin@example.co.uk'));
    }

}
